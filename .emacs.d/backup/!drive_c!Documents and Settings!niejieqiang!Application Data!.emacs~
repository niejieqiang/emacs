(add-to-list 'load-path "~/.emacs.d");;彩色显示css颜色x
(add-hook 'css-mode-hook 'css-color-mode)
(autoload 'css-mode "css-mode" "" t)
(autoload 'css-color-mode "mon-css-color" "" t)
(add-to-list 'auto-mode-alist '("\\.css\\'" . css-mode))

(global-set-key [f12] (quote shell));;f12进入命令行

(setq kept-old-versions 2)
;;(setq version-control t);; 备份的版本控制
(setq kept-new-versions 5)
(setq delete-old-versions t)
(setq backup-directory-alist '(("." . "~/.emacs.d/backup")));; 备份目录
(setq backup-by-copying t)
;;(setq dired-kept-versions 1)

(setq default-directory "d:/src");; 设置默认目录

(add-to-list 'load-path "~/.emacs.d/color-theme")
(require 'color-theme);;设置颜色主题
(color-theme-initialize)
(color-theme-wombat)

(set-frame-font "Monaco-12");;设置字体
;;(set-frame-font "DejaVu Sans Mono-12")
(set-fontset-font "fontset-default" 'han '("Microsoft Yahei" . "unicode-bmp"))
;;(set-frame-font "DejaVu Sans 10")
;;(set-frame-font "Arial Unicode MS")

(minibuffer-electric-default-mode 1);;minibuffer 缺省输入

(eval-after-load "dired-aux" ;;解压zip 
   '(add-to-list 'dired-compress-file-suffixes 
                 '("\\.zip\\'" ".zip" "7z")))

(icomplete-mode 99);; 用M-x执行某个命令的时候，在输入的同时给出可选的命令名提示

;;(blink-cursor-mode -1);;光标不闪

(setq user-full-name "niejieqiang");;设置个人信息
(setq user-mail-address "niejieqiang@qq.com")

(setq-default kill-whole-line 1);;C-k 删除该行 
;;(setq auto-save-default nil);不生成名为#filename# 的临时文件   
(global-linum-mode 1);;显示行号
(auto-image-file-mode 1);打开图片显示功能

(auto-compression-mode 1);;可以操作压缩文档
;;(require 'chm-view);;查看chm文件

(tool-bar-mode 0);;去掉图标栏

;;(partial-completion-mode 1);;输入部分即可补全

(setq kill-ring-max 50);; 设置 kill-ring 的大小

(setq default-major-mode 'text-mode);; 默认的主模式

(setq x-select-enable-clipboard 1);支持emacs和外部程序的粘贴
(setq inhibit-startup-message 1);;禁用启动信息
(fset 'yes-or-no-p 'y-or-n-p) ;;按 y 或空格键表示 yes，n 表示 no。
(setq frame-title-format "正在编辑---%b");;;;在标题栏显示buffer的名字

(display-time-mode 1);;启用时间显示设置，在minibuffer上面的那个杠上

(setq display-time-24hr-format 1);;时间使用24小时制
(setq display-time-day-and-date t);;时间显示包括日期和具体时间
;;(setq display-time-use-mail-icon t);;时间栏旁边启用邮件设置
(setq display-time-interval 10);;时间的变化频率
(setq display-time-format "公元%Y年%m月%d日,%A,%H:%M");;显示时间的格式

(mouse-avoidance-mode 'animate);光标靠近鼠标指针时，让鼠标指针自动让开
(setq mouse-yank-at-point t);支持中键粘贴 

(setq visible-bell t);关闭出错时的提示声 

(setq default-major-mode 'text-mode);;找不到合适的模式时，使用text mode
(setq resize-mini-windows nil);;Mini buffer 不要自动调整大小

(setq dired-recursive-copies 'always);;让 dired 可以递归的拷贝和删除目录。
(setq dired-recursive-deletes 'always) 

(show-paren-mode 1);;当指针到一个括号时，自动显示所匹配的另一个括号

(add-to-list 'load-path "~/.emacs.d/auto-complete/")
(require 'auto-complete-config)
(add-to-list 'ac-dictionary-directories "~/.emacs.d/auto-complete//ac-dict")
(ac-config-default)
;; Bad config---C-p->previous C-n->next
(define-key ac-completing-map "\C-n" 'ac-next)
(define-key ac-completing-map "\C-p" 'ac-previous)

(add-to-list 'load-path
                  "~/.emacs.d/yasnippet")
    (require 'yasnippet) ;; not yasnippet-bundle
    (yas/initialize)
    (yas/load-directory "~/.emacs.d/yasnippet/snippets")
(require 'auto-complete-yasnippet)

(add-to-list 'load-path "~/.emacs.d/pde/lisp")
(load "pde-load")
;; ;;PDE---打开新建perl文件
;; ;;PDE---打开新建perl文件
;; ;;PDE---打开新建perl文件
(ido-mode 1)
(setq ido-enable-tramp-completion t);;ido模式中，使用 tramp 的补全方式
(setq ido-save-directory-list-file nil);;ido 模式中不保存目录列表
;;(require 'template-simple)
;; ;;PDE---编辑代码
;; ;;PDE---编辑代码
;; ;;PDE---编辑代码
;; ;; M-SPC not available, window manager take it away
(global-set-key (kbd "M-'") 'just-one-space)
(global-set-key (kbd "C-M-=") 'pde-indent-dwim)
;; nearest key to dabbrev-expand
(global-set-key (kbd "M-;") 'hippie-expand)
(global-set-key (kbd "C-;") 'comment-dwim)
(global-set-key (kbd "C-c f") 'comint-dynamic-complete)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(setq hippie-expand-try-functions-list
          '(try-expand-line
            try-expand-dabbrev
            try-expand-line-all-buffers
            try-expand-list
            try-expand-list-all-buffers
            try-expand-dabbrev-visible
            try-expand-dabbrev-all-buffers
            try-expand-dabbrev-from-kill
            try-complete-file-name
            try-complete-file-name-partially
            try-complete-lisp-symbol
            try-complete-lisp-symbol-partially
            try-expand-whole-kill))
(autoload 'comint-dynamic-complete "comint" "Complete for file name" t)
(setq comint-completion-addsuffix '("/" . ""))
(setq-default indent-tabs-mode nil)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(defalias 'perl-mode 'cperl-mode)
(defun pde-perl-mode-hook ()
  (abbrev-mode t)
  (add-to-list 'cperl-style-alist
               '("PDE"
                 (cperl-auto-newline                         . t)
                 (cperl-brace-offset                         . 0)
                 (cperl-close-paren-offset                   . -4)
                 (cperl-continued-brace-offset               . 0)
                 (cperl-continued-statement-offset           . 4)
                 (cperl-extra-newline-before-brace           . nil)
                 (cperl-extra-newline-before-brace-multiline . nil)
                 (cperl-indent-level                         . 4)
                 (cperl-indent-parens-as-block               . t)
                 (cperl-label-offset                         . -4)
                 (cperl-merge-trailing-else                  . t)
                 (cperl-tab-always-indent                    . t)))
  (cperl-set-style "PDE"))
;;语法检查和运行
;;语法检查和运行
;;语法检查和运行
;;语法检查和运行
(global-set-key (kbd "C-c s") 'compile-dwim-compile)
(global-set-key (kbd "C-c r") 'compile-dwim-run)
(setq compilation-buffer-name-function 'pde-compilation-buffer-name)
(autoload 'compile-dwim-run "compile-dwim" "Build and run" t)
(autoload 'compile-dwim-compile "compile-dwim" "Compile or check syntax" t)
(autoload 'executable-chmod "executable"
          "Make sure the file is executable.")
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(defun pde-perl-mode-hook ()
   ;; chmod when saving
  (when (and buffer-file-name
        (not (string-match "\\.\\(pm\\|pod\\)$" (buffer-file-name))))
      (add-hook 'after-save-hook 'executable-chmod nil t))
  (set (make-local-variable 'compile-dwim-check-tools) nil))
;;代码浏览
;;代码浏览
;;代码浏览
;;代码浏览
(require 'ffap) 
(global-set-key (kbd "C-c i") 'imenu)
(global-set-key (kbd "C-c v") 'imenu-tree)
(global-set-key (kbd "C-c j") 'ffap)
(setq tags-table-list '("./TAGS" "../TAGS" "../../TAGS"))
(autoload 'imenu-tree "imenu-tree" "Show imenu tree" t)
(setq imenu-tree-auto-update t)
(eval-after-load "imenu"
 '(defalias 'imenu--completion-buffer 'pde-ido-imenu-completion))
(autoload 'tags-tree "tags-tree" "Show TAGS tree" t)
;; A wonderful minibuffer completion mode
(partial-completion-mode 1)
(setq PC-include-file-path
      (delete-dups (append PC-include-file-path pde-perl-inc)))
(setq ffap-url-regexp
      (concat
       "\\`\\("
       "news\\(post\\)?:\\|mailto:\\|file:" ; no host ok
       "\\|"
       "\\(ftp\\|https?\\|telnet\\|gopher\\|www\\|wais\\)://" ; needs host
       "\\)[^:]" ; fix for perl module, require one more character that not ":"
       ))       
(add-to-list 'ffap-alist  '(cperl-mode . pde-ffap-locate))

;;Rebinding keys for hideshow
(require 'hideshow)
(define-key hs-minor-mode-map "\C-c\C-o"
  (let ((map (lookup-key hs-minor-mode-map "\C-c@")))
    ;; C-h is help to remind me key binding
    (define-key map "\C-h" 'describe-prefix-bindings)
    (define-key map "\C-q" 'hs-toggle-hiding)
    ;; compatible with outline
    (define-key map "\C-c" 'hs-hide-block)
    (define-key map "\C-e" 'hs-show-block)
    map))
;;查看perl文档
;;查看perl文档
;;查看perl文档
;;查看perl文档
(global-set-key (kbd "C-c h") 'help-dwim)
(setq cperl-lazy-help-time 2)
(defun pde-perl-mode-hook ()
   (cperl-lazy-install))

(add-to-list 'load-path "~/.emacs.d/perl-complete/")
(add-hook 'cperl-mode-hook ;;perl-complete
          (lambda()
            (require 'perl-completion)
            (perl-completion-mode t)))
(add-hook  'cperl-mode-hook
           (lambda ()
             (when (require 'auto-complete nil t) ; no error whatever auto-complete.el is not installed.
               (auto-complete-mode t)
               (make-variable-buffer-local 'ac-sources)
               (setq ac-sources
                     '(ac-source-perl-completion)))))

(setq cperl-font-lock t);;cperl-设置语法高亮
(setq cperl-electric-keywords t) 
(setq cperl-beautify-regexp-piece t)
(setq cperl-faces t)
(setq cperl-highlight-variables-indiscriminately t)
(setq cperl-auto-newline t)
(setq cperl-hairy t);;打开most of cperl options


(defun emacs-maximize ();;启动最大化
  "Maximize emacs window in windows os"
  (interactive)
  (w32-send-sys-command 61488))        ; WM_SYSCOMMAND #xf030 maximize
(defun emacs-minimize ()
  "Minimize emacs window in windows os"
  (interactive)
  (w32-send-sys-command #xf020))    ; #xf020 minimize
(defun emacs-normal ()
  "Normal emacs window in windows os"
  (interactive)
  (w32-send-sys-command #xf120))    ; #xf120 normalimize
(emacs-maximize)

